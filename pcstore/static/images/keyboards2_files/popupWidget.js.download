const CountryCodeData = [
  { name: "Albania", code: "AL", phoneCode: "+355" },
  { name: "Åland Islands", code: "AX", phoneCode: "+358" },
  { name: "Algeria", code: "DZ", phoneCode: "+213" },
  { name: "American Samoa", code: "AS", phoneCode: "+1-684" },
  { name: "Andorra", code: "AD", phoneCode: "+376" },
  { name: "Angola", code: "AO", phoneCode: "+244" },
  { name: "Anguilla", code: "AI", phoneCode: "+1-264" },
  { name: "Antarctica", code: "AQ", phoneCode: "+672" },
  { name: "Antigua and Barbuda", code: "AG", phoneCode: "+1-268" },
  { name: "Argentina", code: "AR", phoneCode: "+54" },
  { name: "Armenia", code: "AM", phoneCode: "+374" },
  { name: "Aruba", code: "AW", phoneCode: "+297" },
  { name: "Australia", code: "AU", phoneCode: "+61" },
  { name: "Austria", code: "AT", phoneCode: "+43" },
  { name: "Azerbaijan", code: "AZ", phoneCode: "+994" },
  { name: "Bahamas", code: "BS", phoneCode: "+1-242" },
  { name: "Bahrain", code: "BH", phoneCode: "+973" },
  { name: "Bangladesh", code: "BD", phoneCode: "+880" },
  { name: "Barbados", code: "BB", phoneCode: "+1-246" },
  { name: "Belarus", code: "BY", phoneCode: "+375" },
  { name: "Belgium", code: "BE", phoneCode: "+32" },
  { name: "Belize", code: "BZ", phoneCode: "+501" },
  { name: "Benin", code: "BJ", phoneCode: "+229" },
  { name: "Bermuda", code: "BM", phoneCode: "+1-441" },
  { name: "Bhutan", code: "BT", phoneCode: "+975" },
  { name: "Bolivia (Plurinational State of)", code: "BO", phoneCode: "+591" },
  { name: "Bosnia and Herzegovina", code: "BA", phoneCode: "+387" },
  { name: "Botswana", code: "BW", phoneCode: "+267" },
  { name: "Bouvet Island", code: "BV" }, // 111
  { name: "Brazil", code: "BR", phoneCode: "+55" },
  { name: "British Indian Ocean Territory", code: "IO", phoneCode: "+246" },
  { name: "Brunei Darussalam", code: "BN", phoneCode: "+673" },
  { name: "Bulgaria", code: "BG", phoneCode: "+359" },
  { name: "Burkina Faso", code: "BF", phoneCode: "+226" },
  { name: "Burundi", code: "BI", phoneCode: "+257" },
  { name: "Cabo Verde", code: "CV", phoneCode: "+238" },
  { name: "Cambodia", code: "KH", phoneCode: "+855" },
  { name: "Cameroon", code: "CM", phoneCode: "+237" },
  { name: "Canada", code: "CA", phoneCode: "+1" },
  { name: "Cayman Islands", code: "KY", phoneCode: "+1-345" },
  { name: "Central African Republic", code: "CF", phoneCode: "+236" },
  { name: "Chad", code: "TD", phoneCode: "+235" },
  { name: "Chile", code: "CL", phoneCode: "+56" },
  { name: "China", code: "CN", phoneCode: "+86" },
  { name: "Christmas Island", code: "CX", phoneCode: "+61" },
  { name: "Cocos (Keeling) Islands", code: "CC", phoneCode: "+61" },
  { name: "Colombia", code: "CO", phoneCode: "+57" },
  { name: "Comoros", code: "KM", phoneCode: "+269" },
  { name: "Congo", code: "CG", phoneCode: "+242" },
  { name: "Congo (Democratic Republic of the)", code: "CD", phoneCode: "+243" },
  { name: "Cook Islands", code: "CK", phoneCode: "+682" },
  { name: "Costa Rica", code: "CR", phoneCode: "+506" },
  { name: "Croatia", code: "HR", phoneCode: "+385" },
  { name: "Cuba", code: "CU", phoneCode: "+53" },
  { name: "Curaçao", code: "CW", phoneCode: "+599" },
  { name: "Cyprus", code: "CY", phoneCode: "+357" },
  { name: "Czechia", code: "CZ", phoneCode: "+420" },
  { name: "Côte d'Ivoire", code: "CI", phoneCode: "+225" },
  { name: "Denmark", code: "DK", phoneCode: "+45" },
  { name: "Djibouti", code: "DJ", phoneCode: "+253" },
  { name: "Dominica", code: "DM", phoneCode: "+1-767" },
  { name: "Dominican Republic", code: "DO", phoneCode: "+1-809" },
  { name: "Ecuador", code: "EC", phoneCode: "+593" },
  { name: "Egypt", code: "EG", phoneCode: "+20" },
  { name: "El Salvador", code: "SV", phoneCode: "+503" },
  { name: "Equatorial Guinea", code: "GQ", phoneCode: "+240" },
  { name: "Eritrea", code: "ER", phoneCode: "+291" },
  { name: "Estonia", code: "EE", phoneCode: "+372" },
  { name: "Eswatini", code: "SZ", phoneCode: "+268" },
  { name: "Ethiopia", code: "ET", phoneCode: "+251" },
  { name: "Falkland Islands [Malvinas]", code: "FK", phoneCode: "+500" },
  { name: "Faroe Islands", code: "FO", phoneCode: "+298" },
  { name: "Fiji", code: "FJ", phoneCode: "+679" },
  { name: "Finland", code: "FI", phoneCode: "+358" },
  { name: "France", code: "FR", phoneCode: "+33" },
  { name: "French Guiana", code: "GF", phoneCode: "+594" },
  { name: "French Polynesia", code: "PF", phoneCode: "+689" },
  { name: "Gabon", code: "GA", phoneCode: "+241" },
  { name: "Gambia", code: "GM", phoneCode: "+220" },
  { name: "Georgia", code: "GE", phoneCode: "+995" },
  { name: "Germany", code: "DE", phoneCode: "+49" },
  { name: "Ghana", code: "GH", phoneCode: "+233" },
  { name: "Gibraltar", code: "GI", phoneCode: "+350" },
  { name: "Greece", code: "GR", phoneCode: "+30" },
  { name: "Greenland", code: "GL", phoneCode: "+299" },
  { name: "Grenada", code: "GD", phoneCode: "+1-473" },
  { name: "Guadeloupe", code: "GP", phoneCode: "+590" },
  { name: "Guam", code: "GU", phoneCode: "+1-671" },
  { name: "Guatemala", code: "GT", phoneCode: "+502" },
  { name: "Guernsey", code: "GG", phoneCode: "+44-1481" },
  { name: "Guinea", code: "GN", phoneCode: "+224" },
  { name: "Guinea-Bissau", code: "GW", phoneCode: "+245" },
  { name: "Guyana", code: "GY", phoneCode: "+592" },
  { name: "Haiti", code: "HT", phoneCode: "+509" },
  { name: "Honduras", code: "HN", phoneCode: "+504" },
  { name: "Hong Kong", code: "HK", phoneCode: "+852" },
  { name: "Hungary", code: "HU", phoneCode: "+36" },
  { name: "Iceland", code: "IS", phoneCode: "+354" },
  { name: "India", code: "IN", phoneCode: "+91" },
  { name: "Indonesia", code: "ID", phoneCode: "+62" },
  { name: "Iran", code: "IR", phoneCode: "+98" },
  { name: "Iraq", code: "IQ", phoneCode: "+964" },
  { name: "Ireland", code: "IE", phoneCode: "+353" },
  { name: "Isle of Man", code: "IM", phoneCode: "+44-1624" },
  { name: "Israel", code: "IL", phoneCode: "+972" },
  { name: "Italy", code: "IT", phoneCode: "+39" },
  { name: "Jamaica", code: "JM", phoneCode: "+1-876" },
  { name: "Japan", code: "JP", phoneCode: "+81" },
  { name: "Jersey", code: "JE", phoneCode: "+44-1534" },
  { name: "Jordan", code: "JO", phoneCode: "+962" },
  { name: "Kazakhstan", code: "KZ", phoneCode: "+7" },
  { name: "Kenya", code: "KE", phoneCode: "+254" },
  { name: "Kiribati", code: "KI", phoneCode: "+686" },
  {
    name: "Korea (Democratic People's Republic of)",
    code: "KP",
    phoneCode: "+850",
  },
  { name: "Korea (Republic of)", code: "KR", phoneCode: "+82" },
  { name: "Kuwait", code: "KW", phoneCode: "+965" },
  { name: "Kyrgyzstan", code: "KG", phoneCode: "+996" },
  { name: "Lao People's Democratic Republic", code: "LA", phoneCode: "+856" },
  { name: "Latvia", code: "LV", phoneCode: "+371" },
  { name: "Lebanon", code: "LB", phoneCode: "+961" },
  { name: "Lesotho", code: "LS", phoneCode: "+266" },
  { name: "Liberia", code: "LR", phoneCode: "+231" },
  { name: "Libya", code: "LY", phoneCode: "+218" },
  { name: "Liechtenstein", code: "LI", phoneCode: "+423" },
  { name: "Lithuania", code: "LT", phoneCode: "+370" },
  { name: "Luxembourg", code: "LU", phoneCode: "+352" },
  { name: "Macao", code: "MO", phoneCode: "+853" },
  { name: "Madagascar", code: "MG", phoneCode: "+261" },
  { name: "Malawi", code: "MW", phoneCode: "+265" },
  { name: "Malaysia", code: "MY", phoneCode: "+60" },
  { name: "Maldives", code: "MV", phoneCode: "+960" },
  { name: "Mali", code: "ML", phoneCode: "+223" },
  { name: "Malta", code: "MT", phoneCode: "+356" },
  { name: "Marshall Islands", code: "MH", phoneCode: "+692" },
  { name: "Martinique", code: "MQ", phoneCode: "+596" },
  { name: "Mauritania", code: "MR", phoneCode: "+222" },
  { name: "Mauritius", code: "MU", phoneCode: "+230" },
  { name: "Mayotte", code: "YT", phoneCode: "+262" },
  { name: "Mexico", code: "MX", phoneCode: "+52" },
  { name: "Micronesia (Federated States of)", code: "FM", phoneCode: "+691" },
  { name: "Moldova (Republic of)", code: "MD", phoneCode: "+373" },
  { name: "Monaco", code: "MC", phoneCode: "+377" },
  { name: "Mongolia", code: "MN", phoneCode: "+976" },
  { name: "Montenegro", code: "ME", phoneCode: "+382" },
  { name: "Montserrat", code: "MS", phoneCode: "+1-664" },
  { name: "Morocco", code: "MA", phoneCode: "+212" },
  { name: "Mozambique", code: "MZ", phoneCode: "+258" },
  { name: "Myanmar", code: "MM", phoneCode: "+95" },
  { name: "Namibia", code: "NA", phoneCode: "+264" },
  { name: "Nauru", code: "NR", phoneCode: "+674" },
  { name: "Nepal", code: "NP", phoneCode: "+977" },
  { name: "Netherlands", code: "NL", phoneCode: "+31" },
  { name: "New Caledonia", code: "NC", phoneCode: "+687" },
  { name: "New Zealand", code: "NZ", phoneCode: "+64" },
  { name: "Nicaragua", code: "NI", phoneCode: "+505" },
  { name: "Niger", code: "NE", phoneCode: "+227" },
  { name: "Nigeria", code: "NG", phoneCode: "+234" },
  { name: "Niue", code: "NU", phoneCode: "+683" },
  { name: "Norfolk Island", code: "NF", phoneCode: "+672" },
  { name: "North Macedonia", code: "MK", phoneCode: "+389" },
  { name: "Northern Mariana Islands", code: "MP", phoneCode: "+1-670" },
  { name: "Norway", code: "NO", phoneCode: "+47" },
  { name: "Oman", code: "OM", phoneCode: "+968" },
  { name: "Pakistan", code: "PK", phoneCode: "+92" },
  { name: "Palau", code: "PW", phoneCode: "+680" },
  { name: "Palestine", code: "PS", phoneCode: "+970" },
  { name: "Panama", code: "PA", phoneCode: "+507" },
  { name: "Papua New Guinea", code: "PG", phoneCode: "+675" },
  { name: "Paraguay", code: "PY", phoneCode: "+595" },
  { name: "Peru", code: "PE", phoneCode: "+51" },
  { name: "Philippines", code: "PH", phoneCode: "+63" },
  { name: "Pitcairn", code: "PN", phoneCode: "+64" },
  { name: "Poland", code: "PL", phoneCode: "+48" },
  { name: "Portugal", code: "PT", phoneCode: "+351" },
  { name: "Puerto Rico", code: "PR", phoneCode: "+1-787" },
  { name: "Qatar", code: "QA", phoneCode: "+974" },
  { name: "Réunion", code: "RE", phoneCode: "+262" },
  { name: "Romania", code: "RO", phoneCode: "+40" },
  { name: "Russian Federation", code: "RU", phoneCode: "+7" },
  { name: "Rwanda", code: "RW", phoneCode: "+250" },
  { name: "Saint Barthélemy", code: "BL", phoneCode: "+590" },
  {
    name: "Saint Helena, Ascension and Tristan da Cunha",
    code: "SH",
    phoneCode: "+290",
  },
  { name: "Saint Kitts and Nevis", code: "KN", phoneCode: "+1-869" },
  { name: "Saint Lucia", code: "LC", phoneCode: "+1-758" },
  { name: "Saint Martin (French part)", code: "MF", phoneCode: "+590" },
  { name: "Saint Pierre and Miquelon", code: "PM", phoneCode: "+508" },
  { name: "Saint Vincent and the Grenadines", code: "VC", phoneCode: "+1-784" },
  { name: "Samoa", code: "WS", phoneCode: "+685" },
  { name: "San Marino", code: "SM", phoneCode: "+378" },
  { name: "Sao Tome and Principe", code: "ST", phoneCode: "+239" },
  { name: "Saudi Arabia", code: "SA", phoneCode: "+966" },
  { name: "Senegal", code: "SN", phoneCode: "+221" },
  { name: "Serbia", code: "RS", phoneCode: "+381" },
  { name: "Seychelles", code: "SC", phoneCode: "+248" },
  { name: "Sierra Leone", code: "SL", phoneCode: "+232" },
  { name: "Singapore", code: "SG", phoneCode: "+65" },
  { name: "Sint Maarten (Dutch part)", code: "SX", phoneCode: "+1-721" },
  { name: "Slovakia", code: "SK", phoneCode: "+421" },
  { name: "Slovenia", code: "SI", phoneCode: "+386" },
  { name: "Solomon Islands", code: "SB", phoneCode: "+677" },
  { name: "Somalia", code: "SO", phoneCode: "+252" },
  { name: "South Africa", code: "ZA", phoneCode: "+27" },
  {
    name: "South Georgia and the South Sandwich Islands",
    code: "GS",
    phoneCode: "+500",
  },
  { name: "South Sudan", code: "SS", phoneCode: "+211" },
  { name: "Spain", code: "ES", phoneCode: "+34" },
  { name: "Sri Lanka", code: "LK", phoneCode: "+94" },
  { name: "Sudan", code: "SD", phoneCode: "+249" },
  { name: "Suriname", code: "SR", phoneCode: "+597" },
  { name: "Svalbard and Jan Mayen", code: "SJ", phoneCode: "+47" },
  { name: "Sweden", code: "SE", phoneCode: "+46" },
  { name: "Switzerland", code: "CH", phoneCode: "+41" },
  { name: "Syrian Arab Republic", code: "SY", phoneCode: "+963" },
  { name: "Taiwan", code: "TW", phoneCode: "+886" },
  { name: "Tajikistan", code: "TJ", phoneCode: "+992" },
  { name: "Tanzania, United Republic of", code: "TZ", phoneCode: "+255" },
  { name: "Thailand", code: "TH", phoneCode: "+66" },
  { name: "Timor-Leste", code: "TL", phoneCode: "+670" },
  { name: "Togo", code: "TG", phoneCode: "+228" },
  { name: "Tokelau", code: "TK", phoneCode: "+690" },
  { name: "Tonga", code: "TO", phoneCode: "+676" },
  { name: "Trinidad and Tobago", code: "TT", phoneCode: "+1-868" },
  { name: "Tunisia", code: "TN", phoneCode: "+216" },
  { name: "Turkey", code: "TR", phoneCode: "+90" },
  { name: "Turkmenistan", code: "TM", phoneCode: "+993" },
  { name: "Turks and Caicos Islands", code: "TC", phoneCode: "+1-649" },
  { name: "Tuvalu", code: "TV", phoneCode: "+688" },
  { name: "Uganda", code: "UG", phoneCode: "+256" },
  { name: "Ukraine", code: "UA", phoneCode: "+380" },
  { name: "United Arab Emirates", code: "AE", phoneCode: "+971" },
  {
    name: "United Kingdom of Great Britain and Northern Ireland",
    code: "GB",
    phoneCode: "+44",
  },
  { name: "United States of America", code: "US", phoneCode: "+1" },
  { name: "Uruguay", code: "UY", phoneCode: "+598" },
  { name: "Uzbekistan", code: "UZ", phoneCode: "+998" },
  { name: "Vanuatu", code: "VU", phoneCode: "+678" },
  { name: "Venezuela (Bolivarian Republic of)", code: "VE", phoneCode: "+58" },
  { name: "Viet Nam", code: "VN", phoneCode: "+84" },
  { name: "Western Sahara", code: "EH", phoneCode: "+212" },
  { name: "Yemen", code: "YE", phoneCode: "+967" },
  { name: "Zambia", code: "ZM", phoneCode: "+260" },
  { name: "Zimbabwe", code: "ZW", phoneCode: "+263" },
];

const WidgetType = {
  welcome: "1",
  recovery: "2",
};

// create style
var styles = `
 @import url('https://fonts.googleapis.com/css2?family=Outfit:wght@100;200;300;400&display=swap');

 #pop-up-widget{
     position: fixed;
     width: 100vw;
     height: 100vh;
     left: 0;
     top: 0;
     background: rgba(0, 0, 0, 0.5);
     z-index: 1996;
 }
 input[type='tel']:not(.browser-default),input[type='email']:not(.browser-default) {
     border-bottom: 1px solid #ced0ce !important;
     box-shadow: none !important;;
 }
 .PartA {
     max-height: 500px;
 }
 .PartC {
     max-height: 500px;
 }
 .picShow-bottom-content {
     overflow: hidden;
     border-radius: 8px;
     background: #fff;
     display: flex;
     position: relative;
     box-shadow: 0px 4px 6px -4px rgba(27, 29, 28, 0.1), 0px 10px 15px -3px rgba(27, 29, 28, 0.1);
 }

 .picShow-bottom-content .cr-close {
     cursor: pointer;
     height: 24px;
     position: absolute;
     right: 8px;
     top: 8px;
     padding: 4px;
     border-radius: 25px;
     background:#f6f7f6;
 }

 .picShow-bottom-content .content-left {
     display: flex;
     width: 320px;
     padding: 24px;
     flex-direction: column;
     align-items: flex-start;
 }

 .picShow-bottom-content .content-left .cl-title {
    color: #1b1d1c;
    font-size: 32px;
    font-style: normal;
    font-weight: 700;
    line-height: 40px;
    margin-top: 8px;
    width: 100%;
    overflow-wrap: break-word;
    word-wrap: break-word;
 }

 .picShow-bottom-content .content-left .cl-title-phone {
     color: #1b1d1c;
     font-size: 20px;
     font-weight: 700;
     line-height: 25px;
     width: 100%;
     word-break: break-all;
 }

 .picShow-bottom-content .content-left .cl-subtitle {
     color: #505451;
     width: 100%;
 }

 .picShow-bottom-content .content-left .cl-input-number {
     max-height: 36px;
     box-sizing: border-box;
     margin-top: 16px;
     display: flex;
     padding: 8px var(--Input-field-h-padding, 12px);
     justify-content: space-between;
     align-items: center;
     align-self: stretch;
     border-radius: 4px;
     border: 1px solid #ced0ce;
     background: white;
     width: 100%;
     word-break: break-all;
     position: relative;
     cursor: pointer;
 }

 .picShow-bottom-content .content-left .cl-input-number .cl-input-number-left {
     border-right: 1px solid #d0d3dd;
     display: flex;
 }

 .picShow-bottom-content .content-left .cl-input-number .cl-input-number-left .icon-india,
 .picShow-bottom-content .content-left .cl-input-number .cl-input-number-left .icon-arrowDown {
     width: 16px;
     height: 16px;
 }

 .picShow-bottom-content .content-left .cl-input-number .input-placeholder-color {
    all:unset;
    font-size: 12px;
    box-sizing: border-box;
    max-height: 36px;
    min-width: 150px;
    border-bottom: none !important;
 }

 .picShow-bottom-content .content-left .cl-btn {
     display: flex;
     padding: var(--v-padding, 12px) var(--h-padding, 20px);
     justify-content: center;
     align-items: center;
     gap: var(--spacing, 8px);
     align-self: stretch;
     border-radius: var(--radius, 8px);
     background: #1a524a;
     color: #ffffff;
     margin-top: 24px;
     width: 100%;
     word-break: break-all;
     text-align: center;
     cursor: pointer;
 }

 .picShow-bottom-content .content-left .cl-bottom-tip {
     color: #505451;
     font-size: 12px;
     margin-top: 8px;
 }

 .picShow-bottom-content .content-right {
     position: relative;
     overflow: hidden;
     width: 260px;
     background: #f6f7f6;
     display: flex;
     justify-content: center;
     align-items: center;
 }

 .picShow-bottom-content .content-right .showPic {
    height: 100%;
    width: 100%;
    object-fit: cover;
    position: absolute;
 }

 .picShow-bottom-content .content-right .pic {
     position: absolute;
     left: -100px;
     height: 100%;
     object-fit: cover;
 }

`;

async function CreatePopupWidget(
  option = {
    welcomeDiscount: null,
    recoveryCart: null,
  }
) {
  let isSuccess = false;
  const optionData = convertFirstLetterToLower(option);
  // console.log("optionData", optionData);
  const localStorageName = "isPopUpAlreadySend" + location.host;
  const script = document.createElement("script");
  script.src =
    "https://cdn.jsdelivr.net/npm/libphonenumber-js/bundle/libphonenumber-js.min.js";
  document.head.appendChild(script);
  //1. judge use welcome or recover data
  if (
    optionData &&
    !optionData?.recoveryCart?.enable &&
    !optionData?.welcomeDiscount?.enable
  ) {
    return;
  }

  const isCartHaveProduct = await isCartHaveProductFunc();

  //2. set init data
  let popupData;
  let popupType;
  const shopifyDomain = window?.Shopify?.shop || window.location.host; //"wati6-test.myshopify.com"

  const isInHomePage = (location.pathname.match(/\//g) || []).length === 1;
  const isCartPage = location.pathname?.includes("/cart");
  const isRecoverAlreadySend = localStorage.getItem(
    localStorageName + popupType + WidgetType.recovery
  );
  if (!isCartPage) {
    if (
      optionData?.recoveryCart?.enable &&
      isCartHaveProduct &&
      !isRecoverAlreadySend
    ) {
      popupData = optionData?.recoveryCart;
      popupType = WidgetType.recovery;
    } else if (optionData?.welcomeDiscount.enable && isInHomePage) {
      popupData = optionData?.welcomeDiscount;
      popupType = WidgetType.welcome;
    } else {
      return;
    }
  } else {
    return;
  }
  addFontStyleLink();

  function isCartHaveProductFunc() {
    if (window.Shopify?.routes?.root) {
      var cartContents = fetch(window.Shopify?.routes?.root + "cart.js")
        .then((response) => response.json())
        .then((data) => {
          return data.items.length > 0;
        });
      return cartContents;
    } else {
      return false;
    }
  }

  function convertFirstLetterToLower(obj) {
    if (typeof obj !== "object" || obj === null) {
      return obj;
    }

    if (Array.isArray(obj)) {
      return obj.map((item) => convertFirstLetterToLower(item));
    }

    return Object.keys(obj).reduce((acc, key) => {
      let newKey = key.charAt(0).toLowerCase() + key.slice(1);
      acc[newKey] = convertFirstLetterToLower(obj[key]);
      return acc;
    }, {});
  }

  function createPart(part) {
    var timestamp = new Date().getTime();

    const div = document.createElement("div");

    if (part === "PartA") {
      div.className = "content-left PartA";
      div.style.background = popupData?.style.colorBackground;
      div.innerHTML = `
                <div style="color: ${popupData?.style.colorHeading};" class="${
        !isMobile() ? "cl-title" : "cl-title-phone"
      }">
                    ${popupData?.content.welcomeHeading}
                </div>
                <div class="cl-subtitle" style="color: ${
                  popupData?.style.colorSubTitle
                };">
                    ${popupData?.content.welcomeSubHeading}
                </div>
                ${
                  popupData?.content.isWhatsapp
                    ? `<div class="cl-input-number">
                           <select id="countryCode" style="
                                border: none;
                                display: inline-block;
                                opacity: 0;
                                appearance: none;
                                position: absolute;
                                left: 0;
                                width: 40px;
                                ">
                            ${CountryCodeData.map(
                              (countryItm, idx) =>
                                `<option value="${countryItm.code}" key="${idx}">${countryItm.phoneCode} ${countryItm.name}</option>`
                            ).join("")}
                            </select>
                        <div class="cl-input-number-left">
                            <img id=whatsappInputCountryCode class="icon-india mr-4px" src="https://purecatamphetamine.github.io/country-flag-icons/3x2/${
                              popupData?.content.whatsappInputCountryCode
                            }.svg" />
                            <svg class="icon-arrowDown mr-4" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M4 6L8 10L12 6" stroke="#454B5F" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                        </div>
                        <input class="input-placeholder-color" type="tel" id="phone" name="phone" placeholder=${
                          popupData?.content.whatsappInputPlaceHolder
                        }>
                        <svg class="icon-WhatsApp" width="25" height="26" viewBox="0 0 25 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M2.5354 23.0536L3.93853 17.9312C3.0729 16.4323 2.61769 14.7312 2.61821 12.989C2.62082 7.5385 7.05623 3.10413 12.5073 3.10413C15.1526 3.10517 17.6349 4.13486 19.5021 6.00308C21.3687 7.87183 22.3969 10.3552 22.3958 12.9968C22.3937 18.4474 17.9573 22.8822 12.5073 22.8822H12.5031C10.8484 22.8817 9.22186 22.4666 7.77759 21.6786L2.5354 23.0536Z"
                                fill="white" />
                            <path
                                d="M2.53534 23.3141C2.46659 23.3141 2.39992 23.287 2.35044 23.237C2.28534 23.1708 2.25981 23.0745 2.28429 22.9854L3.65877 17.9667C2.80669 16.4531 2.35721 14.7344 2.35825 12.9896C2.36034 7.39479 6.91294 2.84375 12.5072 2.84375C15.2208 2.84479 17.7702 3.90156 19.6864 5.81927C21.6025 7.7375 22.6572 10.2865 22.6562 12.9969C22.6541 18.5911 18.101 23.1427 12.5072 23.1427C10.8463 23.1422 9.20304 22.7323 7.74471 21.9568L2.60148 23.3052C2.57961 23.3115 2.55773 23.3141 2.53534 23.3141Z"
                                fill="white" />
                            <path
                                d="M12.5073 3.10421C15.1526 3.10525 17.6349 4.13494 19.5021 6.00317C21.3688 7.87192 22.3969 10.3552 22.3959 12.9969C22.3938 18.4474 17.9573 22.8823 12.5073 22.8823H12.5032C10.8485 22.8818 9.22191 22.4667 7.77764 21.6787L2.53545 23.0537L3.93858 17.9313C3.07295 16.4323 2.61774 14.7313 2.61826 12.9891C2.62087 7.53858 7.05629 3.10421 12.5073 3.10421ZM12.5073 2.58337C6.76983 2.58337 2.10004 7.25108 2.09743 12.9891C2.09691 14.7427 2.53962 16.4709 3.3792 18.0006L2.03285 22.9167C1.98389 23.0964 2.03389 23.2881 2.16514 23.4204C2.2641 23.5204 2.39795 23.575 2.53545 23.575C2.57972 23.575 2.62399 23.5693 2.66774 23.5579L7.71306 22.2349C9.18597 22.9995 10.837 23.4032 12.5032 23.4037C18.2448 23.4037 22.9146 18.7355 22.9172 12.9974C22.9183 10.2167 21.8365 7.60212 19.8714 5.63546C17.9052 3.66827 15.2901 2.58442 12.5073 2.58337Z"
                                fill="#CFD8DC" />
                            <path
                                d="M18.3209 7.1833C16.7688 5.63018 14.7058 4.77445 12.51 4.77393C7.97666 4.77393 4.28968 8.45934 4.2876 12.9895C4.28708 14.5422 4.72145 16.0536 5.54437 17.3625L5.7402 17.6734L4.90947 20.7052L8.02041 19.8896L8.32093 20.0677C9.58239 20.8166 11.0293 21.2125 12.5043 21.213H12.5074C17.0376 21.213 20.7246 17.5271 20.7261 12.9963C20.7267 10.801 19.873 8.73643 18.3209 7.1833Z"
                                fill="#40C351" />
                            <path fill-rule="evenodd" clip-rule="evenodd"
                                d="M10.0353 8.85677C9.85044 8.44532 9.65565 8.43698 9.47909 8.42969C9.33481 8.42344 9.17023 8.42396 9.00565 8.42396C8.84106 8.42396 8.57336 8.48594 8.34679 8.73334C8.12023 8.98073 7.48169 9.57813 7.48169 10.7938C7.48169 12.0094 8.36711 13.1844 8.49054 13.349C8.61398 13.5135 10.1999 16.088 12.7114 17.0786C14.7984 17.9016 15.2234 17.738 15.6765 17.6969C16.1296 17.6557 17.1385 17.0995 17.3442 16.5224C17.5499 15.9453 17.5499 15.451 17.4885 15.3479C17.4265 15.2448 17.2619 15.1833 17.015 15.0594C16.7681 14.9354 15.553 14.338 15.3265 14.2557C15.0999 14.1734 14.9353 14.1323 14.7702 14.3797C14.6056 14.6266 14.1322 15.1833 13.9879 15.3479C13.8437 15.513 13.6994 15.5339 13.4525 15.4099C13.2056 15.2859 12.4098 15.0255 11.4655 14.1839C10.7312 13.5292 10.2353 12.7203 10.0911 12.4729C9.94679 12.226 10.0754 12.0922 10.1994 11.9688C10.3103 11.8578 10.4463 11.6802 10.5702 11.5359C10.6937 11.3917 10.7348 11.2885 10.8171 11.124C10.8994 10.9589 10.8583 10.8146 10.7963 10.6911C10.7353 10.5672 10.2551 9.34532 10.0353 8.85677Z"
                                fill="white" />
                        </svg>
                        </div>`
                    : `<input type="email" id="popupEmail" name="email" placeholder=${popupData?.content.emailInputPlaceHolder}  class="cl-input-number">`
                }
                <div class="cl-btn" style="background: ${
                  popupData?.style.colorPrimaryButton
                };">
                    ${
                      popupData?.content.isWhatsapp
                        ? popupData?.content.whatsappSubmitButtonText
                        : popupData?.content.emailSubmitButtonText
                    }
                </div>
                <div class="cl-bottom-tip">${
                  popupData?.content.welcomeFooter
                }</div>
            `;
    } else if (part === "PartB") {
      const IconShopifyPicDefault = `<svg class="defaultPic" width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
        d="M5.5 0C2.462 0 0 2.462 0 5.5V23.4023L7.50586 16.1426C9.02886 14.6686 11.6128 14.6706 13.1328 16.1426L19.3105 22.1191L21.3594 20.1387C22.8774 18.6707 25.4703 18.6707 26.9863 20.1387L36 28.8574V5.5C36 2.462 33.538 0 30.5 0H5.5ZM24.5 7C26.981 7 29 9.019 29 11.5C29 13.981 26.981 16 24.5 16C22.019 16 20 13.981 20 11.5C20 9.019 22.019 7 24.5 7ZM24.5 10C24.1022 10 23.7206 10.158 23.4393 10.4393C23.158 10.7206 23 11.1022 23 11.5C23 11.8978 23.158 12.2794 23.4393 12.5607C23.7206 12.842 24.1022 13 24.5 13C24.8978 13 25.2794 12.842 25.5607 12.5607C25.842 12.2794 26 11.8978 26 11.5C26 11.1022 25.842 10.7206 25.5607 10.4393C25.2794 10.158 24.8978 10 24.5 10ZM10.3184 18.0098C10.0539 18.0098 9.7903 18.1063 9.5918 18.2988L0 27.5762V30.5C0 33.365 2.19223 35.7176 4.99023 35.9746L17.1543 24.207L11.0469 18.2988C10.8484 18.1063 10.5829 18.0098 10.3184 18.0098ZM24.1738 22.0098C23.9082 22.0098 23.6433 22.1049 23.4473 22.2949L9.27734 36H30.5C32.786 36 34.7442 34.6041 35.5742 32.6191L24.9023 22.2949C24.7058 22.1049 24.4395 22.0098 24.1738 22.0098Z"
        fill="#848A86" />
    </svg>`;
      div.className = "content-right";
      div.innerHTML = `
        ${
          popupData?.style?.imageUrl
            ? `<img src="${optionData.imagePath}${popupData?.style?.imageUrl}?timestamp=${timestamp}" class="showPic" />`
            : IconShopifyPicDefault
        }
            `;
    } else if (part === "PartC") {
      div.className = "content-left";
      div.style.background = popupData?.style.colorBackground;
      div.innerHTML = `
            <div style="color: ${popupData?.style.colorHeading}" class=${
        !isMobile() ? "cl-title" : "cl-title-phone"
      }>
                ${popupData?.content.successHeading}
            </div>
            <div class="cl-subtitle" style=" color: ${
              popupData?.style.colorSubTitle
            } ">
                ${popupData?.content.successSubHeading}
            </div>
            <div class="cl-btn" style=
            " background: ${popupData?.style.colorPrimaryButton}">
                ${popupData?.content.successFooter}
            </div>
        `;
    } else if (part === "ClosePart") {
      const IconShopifyClose = `<svg class="IconShopifyClose"  width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M12 4L4 12" stroke="#353735" stroke-linecap="round" stroke-linejoin="round" />
          <path d="M4 4L12 12" stroke="#353735" stroke-linecap="round" stroke-linejoin="round" />
        </svg>`;
      div.className = "cr-close";
      div.innerHTML = IconShopifyClose;
    } else {
      div.textContent = part; // For demonstration, set the text content to the part name
    }
    return div;
  }

  function addFontStyleLink() {
    if (!popupData?.content?.fontStyle) {
      return;
    }
    const link = document.createElement("link");
    link.href = `https://fonts.googleapis.com/css2?family=${popupData?.content?.fontStyle?.replace(
      / /g,
      "+"
    )}&display=swap`;
    link.rel = "stylesheet";
    document.head.appendChild(link);
  }

  function submitPopupOptInAPI(params, isClose, errMsg) {
    fetch(optionData.apiUrl + "/api/v1/shopify/submitPopupOptIn", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(params),
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        if (response.status === 400) {
          setErrorInfo("add", errMsg);
          localStorage.setItem(localStorageName + popupType, "");
        } else {
          const widget = document.getElementById("pop-up-widget");
          if (widget && isClose) {
            widget.remove();
            isSuccess = true;
            if (popupData?.rules?.whomToShow == 1) {
              localStorage.setItem(localStorageName + popupType, "yes");
            } else {
              localStorage.setItem("isPopUpAlreadySend", "");
            }
            setErrorInfo("remove");

            createPopup();
          }
        }

        return response.json();
      })
      .catch(() => {
        setErrorInfo("add", errMsg);
        localStorage.setItem(localStorageName + popupType, "");
      });
  }
  function setErrorInfo(type, message) {
    if (type === "add") {
      var inputNumberElement = document.querySelector(".cl-input-number");
      var errorSpan = document.querySelector("#errorSpan");
      if (!errorSpan && inputNumberElement) {
        var newSpan = document.createElement("span");
        newSpan.id = "errorSpan";
        newSpan.style.color = "red";
        newSpan.style.fontSize = "10px";
        newSpan.textContent = message;
        inputNumberElement.insertAdjacentElement("afterend", newSpan);
      }
    }

    if (type === "remove") {
      var errorSpan = document.querySelector("#errorSpan");
      if (errorSpan) {
        errorSpan.remove();
      }
    }
  }
  function shopifyWelcomeAPI(params, isClose) {
    fetch(optionData.apiUrl + "/api/v1/shopify/showPopupOptIn", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(params),
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }

        return response.json(); // 解析响应体为JSON
      })
      .catch((error) => {
        console.error("There was a problem with your fetch operation:", error);
      });
  }

  // 4. create popup widget
  function createPopup() {
    const params = {
      shopifyDomain: shopifyDomain,
      widgetType: popupType,
    };

    // Don't need to call the showPopup API when the popup is showing the Success Page
    if (!isSuccess) shopifyWelcomeAPI(params);

    let canPCShow =
      popupData?.rules?.whereToShow == 1 || popupData?.rules?.whereToShow == 3;
    let canMobileShow =
      popupData?.rules?.whereToShow == 2 || popupData?.rules?.whereToShow == 3;
    if ((isMobile() && !canMobileShow) || (!isMobile() && !canPCShow)) {
      return;
    }
    const isPicLeft = popupData.style.imagePosition === "left" ? true : false;
    const picShowBottom = document.createElement("div");
    picShowBottom.id = "pop-up-widget";
    picShowBottom.className = "picShow-bottom";
    picShowBottom.style.fontFamily = popupData?.content.fontStyle || "inherit";
    // Check conditions and create content accordingly
    if (!isSuccess) {
      const contentDiv = document.createElement("div");
      contentDiv.style.position = "absolute";
      contentDiv.style.top = "50%";
      contentDiv.style.left = "50%";
      contentDiv.style.transform = "translate(-50%, -50%)";
      contentDiv.className = "picShow-bottom-content";
      contentDiv.id = "picShow-bottom-content";
      if (isMobile()) {
        contentDiv.appendChild(createPart("PartA"));
      } else {
        if (popupData?.style.imagePosition === "none") {
          contentDiv.appendChild(createPart("PartA"));
        } else {
          contentDiv.appendChild(
            !isPicLeft
              ? createPart("PartA")
              : popupData?.style.imagePosition !== "none" && createPart("PartB")
          );
          contentDiv.appendChild(
            !isPicLeft
              ? popupData?.style.imagePosition !== "none" && createPart("PartB")
              : createPart("PartA")
          );
        }
      }

      contentDiv.appendChild(createPart("ClosePart"));
      picShowBottom.appendChild(contentDiv);
    } else if (isSuccess) {
      const contentDiv = document.createElement("div");
      contentDiv.style.position = "absolute";
      contentDiv.style.top = "50%";
      contentDiv.style.left = "50%";
      contentDiv.style.transform = "translate(-50%, -50%)";
      contentDiv.className = "picShow-bottom-content";
      contentDiv.id = "picShow-bottom-content";
      if (isMobile()) {
        contentDiv.appendChild(createPart("PartC"));
      } else {
        if (popupData?.style.imagePosition === "none") {
          contentDiv.appendChild(createPart("PartC"));
        } else {
          contentDiv.appendChild(
            !isPicLeft
              ? createPart("PartC")
              : popupData?.style.imagePosition !== "none" && createPart("PartB")
          );
          contentDiv.appendChild(
            !isPicLeft
              ? popupData?.style.imagePosition !== "none" && createPart("PartB")
              : createPart("PartC")
          );
        }
      }

      contentDiv.appendChild(createPart("ClosePart"));
      picShowBottom.appendChild(contentDiv);
    }
    var styleSheet = document.createElement("style");
    styleSheet.innerText = styles;
    document.getElementsByTagName("head")[0].appendChild(styleSheet);
    document.body.appendChild(picShowBottom);
  }

  // isWhereToShow

  function isMobile() {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
      navigator.userAgent
    );
  }

  function isDisplayFrequencyFunc() {
    // rules when repeat show widget
    if (popupData?.rules?.doNotShowAgain) {
      return true;
    }
    if (!popupData?.rules?.setLimit) {
      return false;
    }

    const lastShownTime = localStorage.getItem("lastPopupShowTime");
    const currentTime = new Date().getTime();
    const timeMappings = {
      "1h": 1 * 3600000,
      "3h": 3 * 3600000,
      "6h": 6 * 3600000,
      "12h": 12 * 3600000,
      "1d": 1 * 86400000,
      "3d": 3 * 86400000,
      "1w": 1 * 604800000,
      "1m": 30 * 86400000,
      "3m": 3 * 30 * 86400000,
    };
    const timeInterval = timeMappings[popupData?.rules?.showAgainAfter];
    if (lastShownTime) {
      const elapsedTime = currentTime - lastShownTime;
      if (elapsedTime < timeInterval) {
        return false;
      }
    }
    localStorage.setItem("lastPopupShowTime", currentTime);
    return true;
  }

  // isWhomToShow
  function judgeWhomToShowIsSignUp() {
    function actOnUser(retry, resolve, reject) {
      const ShopifyAnalytics = window.ShopifyAnalytics;
      if (
        ShopifyAnalytics &&
        ShopifyAnalytics.lib &&
        ShopifyAnalytics.lib.user &&
        ShopifyAnalytics.lib.user().traits().uniqToken
      ) {
        // console.log(ShopifyAnalytics.lib.user().traits().uniqToken); // Do your work here.
        resolve(true);
      } else {
        if (retry > 0) {
          setTimeout(function () {
            actOnUser(retry - 1, resolve, reject);
          }, 1000);
        } else {
          reject(false);
        }
      }
    }

    return new Promise((resolve, reject) => {
      setTimeout(function () {
        actOnUser(10, resolve, reject);
      }, 1000);
    });
  }

  async function isWhomToShowFunc() {
    const isPopUpAlreadySend = localStorage.getItem(
      localStorageName + popupType
    );
    if (popupData?.rules?.whomToShow == 1 && isPopUpAlreadySend === "yes") {
      //   try {
      //     const result = await judgeWhomToShowIsSignUp();
      //     return result ? true : false;
      //   } catch (error) {
      //     // error will be false

      //     return false;
      //   }
      return true;
    } else {
      return false;
    }
  }

  // locationRules
  async function getUserLocation() {
    try {
      const response = await fetch("http://ip-api.com/json/");
      const data = await response.json();
      return data;
    } catch (error) {
      console.error("Error fetching user location:", error);
      return null;
    }
  }

  async function isIpInCountryRange() {
    if (popupData?.rules?.locationRules === 1) {
      return true;
    }

    if (window?.Shopify?.customerPrivacy?.getRegion()) {
      //'US'
      const shopifyUserCountry =
        await window?.Shopify?.customerPrivacy?.getRegion();
      //CountryCodeData
      if (popupData?.rules?.locationRules === 2) {
        const includeCountry = CountryCodeData.filter((itm) => {
          return popupData?.rules?.locationSelectCountry.includes(itm.name);
        });
        const haveCountry = includeCountry
          .map((itm) => itm.code)
          ?.includes(shopifyUserCountry);
        return haveCountry;
      }
      if (popupData?.rules?.locationRules === 3) {
        const includeCountry = CountryCodeData.filter((itm) => {
          return popupData?.rules?.locationUnSelectCountry.includes(itm.name);
        });
        const haveCountry = includeCountry
          .map((itm) => itm.code)
          ?.includes(shopifyUserCountry);
        return !haveCountry;
      }
    }

    return true;
  }
  async function testIsNumber(phoneInput, country) {
    if (!libphonenumber) {
      return false;
    }
    const { parsePhoneNumberFromString } = libphonenumber;

    const phoneNumber = await parsePhoneNumberFromString(phoneInput, country);
    if (phoneNumber && phoneNumber.isValid()) {
      return true;
    } else {
      return false;
    }
  }
  const isWhomToShow = await isWhomToShowFunc();
  const locationRules = await isIpInCountryRange();
  //   const isDisplayFrequency = isDisplayFrequencyFunc();

  if (isWhomToShow) {
    //isDisplayFrequency &&
    return;
  }
  if (!locationRules) {
    return;
  }
  document.body.addEventListener("change", function (event) {
    if (
      event.target.matches(".input-placeholder-color") ||
      event.target.matches("#popupEmail")
    ) {
      setErrorInfo("remove");
    }
  });
  countryCode = popupData?.content.whatsappInputCountryCode;
  document.body.addEventListener("click", async function (event) {
    if (event.target.matches("#countryCode")) {
      var selectElement = document.getElementById("countryCode");
      selectElement?.addEventListener("change", function () {
        var imgElement = document.getElementById("whatsappInputCountryCode");
        imgElement.src = `https://purecatamphetamine.github.io/country-flag-icons/3x2/${this.value}.svg`;
        countryCode = this.value;
      });
    }
    if (event.target.matches(".cl-btn")) {
      event.preventDefault();
      var whatsappInput = document.querySelector(".input-placeholder-color");
      if (whatsappInput) {
        var matchResult = whatsappInput.value.match(/^\d+$/);
        var numberIdx = whatsappInput.value;
        const countryNum = CountryCodeData.find(
          (itm) => itm.code === countryCode
        )?.phoneCode;

        const isNumberValid = await testIsNumber(
          numberIdx,
          countryCode ?? popupData.content.whatsappInputCountryCode
        );
        if (matchResult && isNumberValid) {
          setErrorInfo("remove");

          const params = {
            email: "",
            phoneNumber: numberIdx,
            countryCode: countryNum,
            shopifyDomain: shopifyDomain,
            widgetType: popupType,
          };
          submitPopupOptInAPI(
            params,
            true,
            "Please input a valid number without country code"
          );
        } else {
          setErrorInfo(
            "add",
            "Please input a valid number without country code"
          );
        }
      }
      var emailInput = document.querySelector("#popupEmail");
      if (emailInput) {
        var matchResult = emailInput.value.match(
          /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/
        );

        if (matchResult) {
          var errorSpan = document.querySelector("#errorSpan");
          if (errorSpan) {
            errorSpan.remove();
          }

          const params = {
            email: emailInput.value,
            phoneNumber: "",
            countryCode: "",
            shopifyDomain: shopifyDomain,
            widgetType: popupType,
          };
          submitPopupOptInAPI(
            params,
            true,
            "Please enter your e-mail address in the correct format"
          );
        } else {
          setErrorInfo(
            "add",
            "Please enter your e-mail address in the correct format"
          );
        }
      }
      if (isSuccess) {
        const widget = document.getElementById("pop-up-widget");
        if (widget) {
          widget.remove();
          isSuccess = false;
        }
      }
    }
    if (
      event.target.matches(".cr-close") ||
      event.target.matches(".IconShopifyClose")
    ) {
      event.preventDefault();
      var widget = document.getElementById("pop-up-widget");
      if (widget) {
        widget.remove();
      }
    }
  });

  let popupCreated = false;

  window.addEventListener("scroll", function () {
    // total height
    const documentHeight = document.documentElement.scrollHeight;
    // view height
    const viewportHeight = window.innerHeight;
    // scroll height
    const scrolledHeight = window.scrollY;
    // scroll percentage
    const scrolledPercentage =
      (scrolledHeight / (documentHeight - viewportHeight)) * 100;

    const targetPercentage = popupData?.rules?.whenToShowAfterPercent;

    if (
      scrolledPercentage >= targetPercentage &&
      !popupCreated &&
      popupData?.rules?.whenToShow == 2
    ) {
      createPopup();
      popupCreated = true;
    }
  });

  if (popupData?.rules?.whenToShow == 1) {
    setTimeout(createPopup, 1000 * popupData?.rules?.whenToShowAfterSecond);
  }
}
